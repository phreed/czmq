nuget{
  nuspec{
    id = czmq;
    version : 2.1.0;
    title : CZMQ - High-level C Binding for ZeroMQ;
    authors : {phreed};
    owners : {phreed};
    licenseUrl : https://www.gnu.org/licenses/lgpl.html;
    projectUrl : http://czmq.zeromq.org/;
    iconUrl : http://czmq.zeromq.org/local--files/admin:css/logo.gif;
    requireLicenseAcceptance : false;
    summary : High-level C binding for ZeroMQ and all-round Slice of Heaven for C developers.;
    description : @" 
      CZMQ;
 Ø  High-level C binding for ØMQ and all-round Slice of Heaven for C developers.
 Ø  zctx module for working with ØMQ contexts.
 Ø  zsocket module for working with sockets.
 Ø  zsockopt module lets you set/get socket options.
 Ø  zstr module lets you send/receive string messages.
 Ø  zframe module lets you send/receive individual frames.
 Ø  zmsg module for working with multipart messages.
 Ø  zthread module lets you create threads.
 Ø  zclock module for working with timers and clocks.
 Ø  zloop module gives you a reactor with timer events.
 Ø  zpoller module for a super-simpler poll interface.
 Ø  zlist module for working with linked-lists.
 Ø  zhash module for working with hash containers.
 Ø  zbeacon module for local service discovery.
 Ø  zauth module for security authentication.
 Ø  zcert module for security certificates.
 Ø  zcertstore module for certificate stores.
 Ø  Supports libzmq v2.x, v3.x, and v4.x.
 Ø  LGPLv3 free software with static link exception, commercial support by iMatix Corporation.CZMQ - High-level C Binding for ZeroMQ";
    releaseNotes : "Made a NuGet package.";
    copyright : Copyright 2014;
    tags : {0mq, zeromq, nuget, native; }
  }

  files{
    #defines {
       SDK_2010 = builds\msvc\;

    }  
    include: { "include\*" };
    docs: { "doc\*.txt" };

    [x64,v100,debug] {
       lib: ${SDK_2010}czmq.lib;     
       symbols: ${SDK_2010}vc100.pdb;     
    }    

    [x64,v100,release] {
       lib: ${SDK_2010}x64\Release\czmq.lib;     
    }    

    targets{
       Defines += HAS_CPP_CZMQ_SDK;
    }
  }
}


